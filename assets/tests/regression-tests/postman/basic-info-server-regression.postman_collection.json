{
	"info": {
		"_postman_id": "f3390a33-7edb-436f-a68f-512856b09d7e",
		"name": "basic-info-server-regression",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Me",
					"item": [
						{
							"name": "Create Me Success [201]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4040528a-e696-4793-b22f-8109337886a1",
										"exec": [
											"pm.test(\"Response code is CREATED\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Username\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('username');\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Payload Item\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('payload-item');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "47366618-2512-44aa-b219-4e9b4782b480",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{public-auth-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"payload\": {\r\n     \"payload-item\": \"{{payload-item}}\"\r\n }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/user/me",
									"host": [
										"{{uri}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Me Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb9a32d1-3bdd-4995-9eae-61953695f4ea",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Username\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('username');\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Payload Item\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('payload-item');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b45e2e85-5854-4e6a-8e86-4f9050b1b5af",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{public-auth-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"payload\": {\r\n     \"payload-item\": \"{{payload-item}}_updated\"\r\n }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/user/me",
									"host": [
										"{{uri}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Me Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "034f2745-3f42-4035-8e9c-fd883532b295",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Username\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('username');\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Payload Item\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('payload-item');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "779cbf4c-ffe0-48e7-b842-894426fcc235",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{public-auth-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/user/me",
									"host": [
										"{{uri}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Me Success [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "868c9418-4e35-420a-9a5b-662c90b5055c",
										"exec": [
											"pm.test(\"Response code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Username\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('username');\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains Payload Item\", function () {\r",
											"    pm.expect(pm.response.text()).to.include('payload-item');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d6806254-be1f-4823-b8dd-2ee5077dd86e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{public-auth-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uri}}/user/me",
									"host": [
										"{{uri}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User Success [201]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cfa635a-d5c6-4e80-9a80-d3e5db55b729",
								"exec": [
									"pm.test(\"Response code is CREATED\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c9b7e542-5cbc-4449-b1a4-46e0b0213c64",
								"exec": [
									"pm.environment.set(\"current-index\", Number(pm.environment.get(\"current-index\")) + 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{public-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"payload\": {\r\n     \"payload-item\": \"{{payload-item}}\"\r\n }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "162a8e8c-1051-49d6-8045-71c30803751a",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "82d5b058-c270-4d1f-b584-56dc2643867b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{public-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"username\": \"{{username}}{{current-index}}\",\r\n \"payload\": {\r\n     \"payload-item\": \"{{payload-item}}_updated\"\r\n }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61193213-1562-449d-bd75-2bb176a3ad7d",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a9ba1b3-29b1-44fb-9be0-23f575a30b56",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{public-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user?username={{username}}{{current-index}}",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}{{current-index}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Public User Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a89a8ae3-ec04-48c8-83f4-ab554d5e4597",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f3bcb351-cdce-4172-8f19-b81cb8439221",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user/public?username={{username}}{{current-index}}",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user",
								"public"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}{{current-index}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09a2beea-7800-40cd-8845-2a339709075f",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2da602b7-98a1-4595-8685-408ae87d3db4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user/search?q={{username}}&limit=10",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "{{username}}"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "821b9d82-a6ee-4804-a691-7ee818d8b588",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e192f03a-0f8f-4dc5-8e66-7bc461e91533",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user/all",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23e2ddd7-e9b7-47a1-aca8-d7114ea37b34",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Username\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('username');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f86ed806-59bd-4b10-a8e9-e2d1f97ad9fb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{public-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/user?username={{username}}{{current-index}}",
							"host": [
								"{{uri}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}{{current-index}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product Success [201]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f8ed7bd-f9eb-4b58-9d55-801d1e244029",
								"exec": [
									"pm.test(\"Response code is CREATED\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('product_id');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('name');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Description\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('description');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "46eaeffb-74a0-4c84-ad9a-6eafb2cb388a",
								"exec": [
									"pm.environment.set(\"current-product-index\", Number(pm.environment.get(\"current-product-index\")) + 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"product_id\": \"{{product-name}}{{current-product-index}}\",\r\n \"name\": \"{{product-name}}\",\r\n \"description\": \"{{product-description}}\",\r\n \"payload\": {\r\n     \"payload-item\": \"{{payload-item}}\"\r\n }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uri}}/product/import",
							"host": [
								"{{uri}}"
							],
							"path": [
								"product",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9024cf9-bea0-41e3-bb52-7065c59820fb",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('product_id');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('name');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Description\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('description');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7a251c1d-d17b-42eb-9ec6-6f950de780af",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{uri}}/product/all",
							"host": [
								"{{uri}}"
							],
							"path": [
								"product",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Success [200]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8205a451-212a-4caa-9a3f-947c60e0db19",
								"exec": [
									"pm.test(\"Response code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('product_id');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('name');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Product Description\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('description');\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains Payload Item\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('payload-item');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68527a1c-dc61-4030-8fe0-310c28b8e413",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{public-auth-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{uri}}/product?product_id={{product-name}}{{current-product-index}}",
							"host": [
								"{{uri}}"
							],
							"path": [
								"product"
							],
							"query": [
								{
									"key": "product_id",
									"value": "{{product-name}}{{current-product-index}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}